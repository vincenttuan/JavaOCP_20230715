資料庫伺服器(MySQL)
	|_ 資料庫(Schema) A
		|_資料表(Table) A1
		|_資料表(Table) A2
	|_ 資料庫(Schema) B
		|_資料表(Table) B1
	|_ 資料庫(Schema) C
		|_資料表(Table) C1
		|_資料表(Table) C2
		|_資料表(Table) C3
			|_資料列(Record) 1 
				|_資料欄(Field) 學號
				|_資料欄(Field) 姓名
				|_資料欄(Field) 課程
				|_資料欄(Field) 教授
				|_資料欄(Field) 教室
			|_資料列(Record) 2
				|_資料欄(Field) 學號
				|_資料欄(Field) 姓名
				|_資料欄(Field) 課程
				|_資料欄(Field) 教授
				|_資料欄(Field) 教室
			|_資料列(Record) 3
				|_資料欄(Field) 學號
				|_資料欄(Field) 姓名
				|_資料欄(Field) 課程
				|_資料欄(Field) 教授
				|_資料欄(Field) 教室
				

資料表學生選課表(未正規化)

學號 姓名 課程  教授   教室
-----------------------
101 小明 數學 王教授  101室
101 小明 英文 李教授  202室
102 小紅 數學 王教授  101室
101 小明 數學 王教授  101室

正規化 ?
1.減少資料重複
2.避免修改異常

一次正規化:
資料表學生選課表(一次正規化)
去除重複的資訊

學號 姓名 課程  教授   教室
-----------------------
101 小明 數學 王教授  101室
101 小明 英文 李教授  202室
102 小紅 數學 王教授  101室

ID 學號 姓名 課程  教授   教室
-----------------------
1  101 小明 數學 王教授  101室
2  101 小明 英文 李教授  202室
3  102 小紅 數學 王教授  101室
4  101 小明 數學 王教授  101室


二次正規化:
1. 滿足一次正規
2. 所有非主鍵欄位必須完全依賴整個主鍵, 而不是部分主鍵. (複合主鍵)

學號 姓名 課程  教授   教室
-----------------------
101 小明 數學 王教授  101室
101 小明 英文 李教授  202室
102 小紅 數學 王教授  101室

學號 + 課程 = 可以做為主鍵

學生表:
學號 姓名 
--------
101 小明 
102 小紅 

選課表:
學號 課程  教授   教室
--------------------
101 數學 王教授  101室
101 英文 李教授  202室
102 數學 王教授  101室

三次正規化:
1. 滿足二次正規
2. 所有非主鍵欄位必須直接依賴主鍵而不是透過其他非主鍵欄位

學生表:
學號 姓名 
--------
101 小明 
102 小紅 

課程表
課程  教授   教室
---------------
數學 王教授  101室
英文 李教授  202室

學生選課表
學號 課程 
--------
101 數學 
101 英文 
102 數學 

案例研究:
id,date,product,price,qty,city,branch
1,2023/1/1,紅茶,30,50,台北,信義分店
2,2023/1/1,咖啡,45,80,台北,大安分店
3,2023/1/1,冰沙,60,40,高雄,左營分店
4,2023/1/1,綠茶,28,30,台中,西區分店
5,2023/1/2,紅茶,30,70,台中,西區分店

分店(Branch)
branch_id(PK) city branch_name
---------------------------
    1         台北  信義分店
    2         台北  大安分店
    3         高雄  左營分店
    4         台中  西區分店

SQL(MySQL)-建立資料表
----------------------------------------------
create table branch if not exists(
	branch_id int auto_increment primary key,
	city varchar(50) not null,
	branch_name varchar(50) not null			
);


產品(Product)
product_id(PK) product_name price
-----------------------------------
      1            紅茶      30
      2            咖啡      45
      3            冰沙      60
      4            綠茶      28

SQL(MySQL)-建立資料表
----------------------------------------------
create table product if not exists(
	product_id int auto_increment primary key,
	product_name varchar(50) not null,
	price decimal(10, 2) not null			
);


銷售(Sales)
id(PK)   date      product_id(FK) qty branch_id(FK)
-----------------------------------------------------
  1    2023/1/1          1        50      1
  2    2023/1/1          2        80      2
  3    2023/1/1          3        40      3
  4    2023/1/1          4        30      4
  5    2023/1/2          1        70      4

SQL(MySQL)-建立資料表
----------------------------------------------
create table sales if not exists(
	id int auto_increment primary key,
	date DATE not null,
	product_id int,
	qty int not null,
	branch_id int,
	foreign key (product_id) references product(product_id),
	foreign key (branch_id) references branch(branch_id)	
);









	